name: Onivim2_build
on:
 schedule:
   - cron: '0 2 */2 * *'

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2    
    - name: Install Dependecies
      run: sudo apt-get update && sudo apt-get install -y nodejs git nasm ragel libgdk-pixbuf2.0-dev librsvg2-2 librsvg2-bin librsvg2-common librsvg2-dev libimage-librsvg-perl libgtk-3-0 libpng-dev libglvnd-dev libacl1-dev libncurses-dev libgtk-3-dev libharfbuzz-dev libfreetype6-dev libbz2-dev build-essential libfontconfig1-dev fontconfig m4 cmake xorg-dev libxxf86vm-dev libxkbfile-dev libglu1-mesa-dev clang
    - name: Clone Onivim2 source
      run: source ~/.profile && git clone --depth=1 https://github.com/onivim/oni2.git oni2
    - name: Fix npm permission errors
      run: source fix-npm.sh
    - name: Install esy
      run: npm install -g esy@latest
    - name: Restore Cache
      id: restore-cache
      uses: actions/cache@v2
      with:
        path: oni2/_export
        key:  ${{ runner.os }}-esy-a-${{ hashFiles('oni2/esy.lock/index.json') }}
        restore-keys: |
          ${{ runner.os }}-esy-a
    - name: Esy source install
      run: source ~/.profile && cd oni2 && npm install -g node-gyp && node install-node-deps.js && esy install
    - name: Import Cache
      run: |
        source ~/.profile
        cd oni2
        esy import-dependencies _export
        rm -rf _export   
    - name: Build Onivim2
      run:  cd oni2 && source ~/.profile && esy bootstrap && source ~/.profile && esy '@release' install && esy '@release' run -f --checkhealth && esy '@release' create
    # Re-export dependencies if anything has changed or if it is the first time
    - name: Setting dependency cache 
      run: |
        source ~/.profile
        cd oni2
        esy export-dependencies 
      if: steps.restore-cache.outputs.cache-hit != 'true'  
    - name: Change artifact name
      run: cd oni2/_release && mv Onivim2-x86_64.AppImage Onivim2-x86_64_$(date +%F).AppImage
    - name: Get current date
      id: date
      run: echo "time=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
    - name: Get Onivim2 version
      run: cd oni2 && echo "version=$(head -1 CHANGES.md | cut -c-7 | sed 's/^.\{2\}//')" >> $GITHUB_ENV
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
       tag_name: ${{ env.version }}-${{ env.time }}
       name: nightly-release-${{ env.time }}
       body: |
         Onivim2 version ${{ env.version }} built on ${{ env.time }}
       files: | 
         oni2/_release/Onivim2-x86_64*

